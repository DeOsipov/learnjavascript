/*---Числа

Создайте страницу, которая предлагает ввести два числа и выводит их сумму.
P.S. Есть «подводный камень» при работе с типами.
*/

var num1 = +prompt( 'Input a number 1', '');
var num2 = +prompt( 'Input a number 2', '');
var sum = num1 + num2;

alert( sum );

// refactoring

var num1 = +prompt( 'Input a number 1', '');
var num2 = +prompt( 'Input a number 2', '');

alert( num1 + num2 );

/*Представьте себе электронный магазин. Цены даны с точностью до копейки(цента, евроцента и т.п.).
Вы пишете интерфейс для него. Основная работа происходит на сервере, но и на клиенте все должно быть хорошо.
Сложение цен на купленные товары и умножение их на количество является обычной операцией.
Получится глупо, если при заказе двух товаров с ценами 0.10$ и 0.20$ человек получит общую стоимость 0.30000000000000004$:
 alert( 0.1 + 0.2 + '$' );
Что можно сделать, чтобы избежать проблем с ошибками округления?*/

Хранить данные в price.toFixed( 2 );
Или в скрипте сложения цен товаров, результат = result.toFixed(2);

/*Этот цикл – бесконечный. Почему?
var i = 0;
while (i != 10) {
  i += 0.2;
}*/

var i = 0.2;
i.toFixed(17) = 0.2...1; // является бесконечной двоичной дробью;

i * 50 != 10; //условие никогда не выполнитсяж

/*
Напишите функцию getDecimal(num), которая возвращает десятичную часть числа:
alert( getDecimal(12.345) ); // 0.345
alert( getDecimal(1.2) ); // 0.2
alert( getDecimal(-1.2) ); // 0.2
P.S. Постарайтесь не использовать toFixed */

//---1
function getDecimal(num) {
	if ( num >= 0) {
		return num - Math.Round(num);
	} else {
		return Math.Round(num) - num;
	};
};


//---2
function getDecimal(num) {
	num > 0 ? num - Math.Round(num) : Math.Round(num) - num;
};

/*
Последовательность чисел Фибоначчи имеет формулу Fn = Fn-1 + Fn-2.
То есть, следующее число получается как сумма двух предыдущих.
Существует формула Бине, согласно которой Fn
равно ближайшему целому для ϕn/√5, где ϕ=(1+√5)/2 – золотое сечение.
Напишите функцию fibBinet(n), которая будет вычислять Fn,
используя эту формулу. Проверьте её для значения F77*/

function fibBinet(n) {
  var phi = (1 + Math.sqrt(5)) / 2;
  return Math.round(Math.pow(phi, n) / Math.sqrt(5));
}

function fib(n) {
  var a = 1,
      b = 0,
	  x;

  for (i = 0; i < n; i++) {
    x = a + b;
    a = b
    b = x;
  };

  return b;
};

/*Напишите код для генерации случайного значения в диапазоне от 0 до max, не включая max.*/
Math.random() * max;

//Напишите код для генерации случайного числа от min до max, не включая max.
(Math.random() * (max - min)) + min;

/*Напишите функцию randomInteger(min, max)
для генерации случайного целого числа между min и max, включая min,max как возможные значения.
Любое число из интервала min..max должно иметь одинаковую вероятность.*/

function randomInteger(min, max) {
	return Math.round(min - 0.5 + (Math.random() * (max - min + 1)));
}

//---Strings

/*Сделать первый символ заглавным
Напишите функцию ucFirst(str), которая возвращает строку str с заглавным первым символом, например:...
P.S. В JavaScript нет встроенного метода для этого. Создайте функцию, используя toUpperCase() и charAt().*/

function ucFirst(str) {
	return str[0].toUpperCase() + str.slice(1);
}

/*Напишите функцию checkSpam(str), которая возвращает true, если строка str содержит „viagra“ или „XXX“, а иначе false.
Функция должна быть нечувствительна к регистру:*/

//---1
function checkSpam(str) {
  var lowerStr = str.toLowerCase();
  return !!(~lowerStr.indexOf('viagra') || ~lowerStr.indexOf('xxx'));
}

/*Создайте функцию truncate(str, maxlength), которая проверяет длину строки str,
и если она превосходит maxlength – заменяет конец str на "...", так чтобы ее длина стала равна maxlength.
Результатом функции должна быть (при необходимости) усечённая строка.*/

function truncate(str, maxlength) {
	if ( str.length < maxlength ) {
		return str;
	} else {
		return str.slice(0, maxlength - 3) + '...';
	}
}

/*Есть стоимость в виде строки: "$120". То есть, первым идёт знак валюты, а затем – число.
Создайте функцию extractCurrencyValue(str), которая будет из такой строки выделять число-значение,
в данном случае 120.*/

function eCV(str) {
	return +(str.slice(1));
}

/*---Объекты как ассоциативные массивы
Мини-задача на синтаксис объектов. Напишите код, по строке на каждое действие.

Создайте пустой объект user.
Добавьте свойство name со значением Вася.
Добавьте свойство surname со значением Петров.
Поменяйте значение name на Сергей.
Удалите свойство name из объекта.
решение*/

var user = {};
user.name = 'Vas';
user.surname = 'Petrov';
user.name = 'Serg';
delete user.name;